#pragma kernel FluidSimulationCS
#pragma kernel InitCS

#include "FluidParticle.hlsl"
            #include "UnityCG.cginc"

#define tx 64

float _ParticleSize;
uint _PrevFluidParticleCount;
uint _CurrFluidParticleCount;
float _Deltatime;
StructuredBuffer<FluidParticlePhysics> _FluidParticleInit;
RWStructuredBuffer<FluidParticleGraphics> _FluidParticleGraphics;
RWStructuredBuffer<FluidParticlePhysics> _FluidParticlePhysics;

Texture2D<float> _FluidDensity;
Texture2D<float4> _FluidPressure;
float4 _TexelSize;


[numthreads(tx,1,1)]
void FluidSimulationCS (uint3 id : SV_DispatchThreadID)
{
	const uint idx = id.x;
	float energyDumping = 0.98f;
	if(idx > _CurrFluidParticleCount) return;

	// Update Acceleration
	float2 texUV = _FluidParticlePhysics[idx].position.xy * 0.5f + 0.5f;
	texUV.y = 1 - texUV.y;
	texUV.x *= _TexelSize.x;
	texUV.y *= _TexelSize.y;
	
	float density = _FluidDensity[texUV.xy];
	float2 pressure = _FluidPressure[texUV.xy].xy;
	float3 acceleration = 0;
	acceleration.xy = pressure/ max(density, 1e-5);
	acceleration.y *= -1;
	_FluidParticlePhysics[idx].acceleration = acceleration;
	
	// Update Position
	float3 velocity = _FluidParticlePhysics[idx].velocity + acceleration * _Deltatime;
	float3 position = _FluidParticlePhysics[idx].position + velocity * _Deltatime;

	float halfBoundSize = 1.f - _ParticleSize;
	if(abs(position.x) > halfBoundSize)
	{
		position.x = halfBoundSize * sign(position.x);
		velocity.x *= -1 * energyDumping;
	}
	
	if(abs(position.y) > halfBoundSize)
	{
		position.y = halfBoundSize * sign(position.y);
		velocity.y *= -1 * energyDumping;
	}
	
	_FluidParticlePhysics[idx].position = position;
	_FluidParticlePhysics[idx].velocity = velocity * energyDumping;
}


[numthreads(tx,1,1)]
void InitCS (uint3 id : SV_DispatchThreadID)
{
	const uint idx = id.x;
	if(idx > _CurrFluidParticleCount) return;
	if(idx < _PrevFluidParticleCount) return;
	
	_FluidParticlePhysics[idx].index = _FluidParticleInit[idx].index;
	_FluidParticlePhysics[idx].position = _FluidParticleInit[idx].position;
	_FluidParticlePhysics[idx].velocity = _FluidParticleInit[idx].velocity;
	_FluidParticlePhysics[idx].acceleration = _FluidParticleInit[idx].acceleration;
}